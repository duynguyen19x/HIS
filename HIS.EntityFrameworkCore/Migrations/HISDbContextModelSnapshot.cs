// <auto-generated />
using System;
using HIS.EntityFrameworkCore.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HIS.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(HISDbContext))]
    partial class HISDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Patients.SPatient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("SPatients", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Patients.STreatment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid?>("CareerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EthnicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InTimeClinical")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OutTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("STreatments", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Pharmaceuticals.DImpExMestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("DImpExpMestTypes", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Pharmaceuticals.ImpMests.DImpMest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApproverTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ApproverUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deliverer")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("ExStockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ImExMestTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ImStockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImpMestStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImpTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ImpUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InvTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReceiverUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReqDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReqRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StockReceiptTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StockReceiptUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TreatmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("ExStockId");

                    b.HasIndex("ImExMestTypeId");

                    b.HasIndex("ImStockId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ReceiverUserId");

                    b.HasIndex("ReqDepartmentId");

                    b.HasIndex("ReqRoomId");

                    b.HasIndex("StockReceiptUserId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TreatmentId");

                    b.ToTable("DImpMests", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Pharmaceuticals.ImpMests.DImpMestMedicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImpMestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ImpPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpVatRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("MedicineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ImpMestId");

                    b.HasIndex("MedicineId");

                    b.ToTable("DImpMestMedicines", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Medicines.SMedicinePricePolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CeilingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MedicineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NewUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OldUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PatientTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaymentRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("PatientTypeId");

                    b.ToTable("SMedicinePricePolicies", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("ImpPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpVatRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InternalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MaterialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("NationalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoftOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("SMaterials", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMaterialType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("ImpPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpVatRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InternalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("NationalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoftOrder")
                        .HasColumnType("int");

                    b.Property<string>("Tutorial")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceUnitId");

                    b.ToTable("SMaterialTypes", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveSubstance")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Concentration")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Content")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Dosage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeInCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ImpPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpVatRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lot")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("MedicineGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MedicineLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MedicineTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PackagingSpecifications")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderDecision")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenderGroup")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenderPackage")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("TenderYear")
                        .HasColumnType("int");

                    b.Property<string>("Tutorial")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("MedicineLineId");

                    b.HasIndex("MedicineTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("SMedicines", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicineGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SMedicineGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2fd41f93-ddb9-47dd-9833-4507ce71128c"),
                            Code = "TV",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc viên",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = new Guid("ff9be71e-a958-4244-9df1-1582229c67d5"),
                            Code = "TU",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc uống",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = new Guid("914ca65d-6579-4590-b963-fee8a743bae1"),
                            Code = "DC",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Dịch truyền",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = new Guid("00be783e-d679-4f1c-9ae2-a4f4c79de0ef"),
                            Code = "TKSV",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc kháng sinh viên",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = new Guid("c987b9d2-e599-49cc-99f3-d075d27cee7c"),
                            Code = "TDY",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc đông y",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = new Guid("35df3868-8db6-440d-809f-f4c345d804a7"),
                            Code = "TS",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc siro",
                            SortOrder = 6
                        },
                        new
                        {
                            Id = new Guid("b5f03233-d733-4349-93df-db562b7d4376"),
                            Code = "THD",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc hỗn dịch",
                            SortOrder = 6
                        },
                        new
                        {
                            Id = new Guid("cc48bb40-fbf0-4054-818c-eb49545aaeea"),
                            Code = "TDN",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc dùng ngoài",
                            SortOrder = 7
                        },
                        new
                        {
                            Id = new Guid("8590ae3d-351c-4438-bfe5-3f69dcf97349"),
                            Code = "TB",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc bột",
                            SortOrder = 8
                        },
                        new
                        {
                            Id = new Guid("ddf105e8-6534-46e4-832b-598daa84c4d5"),
                            Code = "TGN",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc gây nghiện",
                            SortOrder = 9
                        },
                        new
                        {
                            Id = new Guid("2f5148cb-8adf-45ec-88ee-f84530cfa164"),
                            Code = "THTT",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc hướng tâm thần",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = new Guid("e482e866-9243-49d8-8676-403377de353c"),
                            Code = "TKSO",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc kháng sinh ống",
                            SortOrder = 11
                        },
                        new
                        {
                            Id = new Guid("6375b8a1-b6e7-4724-a1b4-8cc3acc98e43"),
                            Code = "KCVI",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Khoáng chất và Vitamin",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = new Guid("31d26ca7-2b5f-4dfd-b961-f3609e6a0b69"),
                            Code = "TCO",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Nhóm thuốc corticoid",
                            SortOrder = 12
                        },
                        new
                        {
                            Id = new Guid("cd5d7538-b1d2-448d-b6ff-c139c35f9dc7"),
                            Code = "TGTM",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc gây tê, mê",
                            SortOrder = 13
                        },
                        new
                        {
                            Id = new Guid("ae04abd7-d012-470d-9b8a-f38d9c5c94a8"),
                            Code = "TG",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc gói",
                            SortOrder = 14
                        },
                        new
                        {
                            Id = new Guid("e47ab5de-9ea5-4075-8da5-7ae9f36538e2"),
                            Code = "TUT",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc ung thư",
                            SortOrder = 15
                        },
                        new
                        {
                            Id = new Guid("a28fb46e-e9b9-410e-9c31-d8ebfd22015c"),
                            Code = "TKTT",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc kê tự túc",
                            SortOrder = 16
                        },
                        new
                        {
                            Id = new Guid("ea57a262-6647-4e88-880c-82bc4227e916"),
                            Code = "TNM",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc nhỏ mắt",
                            SortOrder = 17
                        },
                        new
                        {
                            Id = new Guid("3144745c-477c-4ce2-9c33-a38eb2153057"),
                            Code = "SP",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Sinh phẩm",
                            SortOrder = 18
                        },
                        new
                        {
                            Id = new Guid("25454ce7-bff0-4fd5-a47a-069554c1535a"),
                            Code = "VC",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Vaccine",
                            SortOrder = 19
                        },
                        new
                        {
                            Id = new Guid("9e144dff-29f6-47da-b7ed-b55abd1a2cd3"),
                            Code = "VTNT",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Vật tư nhà thuốc",
                            SortOrder = 20
                        },
                        new
                        {
                            Id = new Guid("05a24915-0bed-4f61-b53d-b5e52482e44c"),
                            Code = "TK",
                            Inactive = false,
                            IsSystem = true,
                            Name = "Thuốc khác",
                            SortOrder = 21
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicineLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SMedicineLines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("05a24915-0bed-4f61-b53d-b5e52482e44c"),
                            Code = "1.01",
                            Inactive = false,
                            Name = "Uống",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = new Guid("03bd1fdc-d2b8-4969-a029-5022ca68f31e"),
                            Code = "1.02",
                            Inactive = false,
                            Name = "Ngậm",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = new Guid("a29889f5-4943-4520-85fa-441c3ea9e979"),
                            Code = "1.03",
                            Inactive = false,
                            Name = "Nhai",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = new Guid("a26814e4-da59-4317-a297-5ca089ef2dad"),
                            Code = "1.04",
                            Inactive = false,
                            Name = "Đặt dưới lưỡi",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = new Guid("5eada7db-843c-453b-8a44-3de2dacaa27b"),
                            Code = "1.05",
                            Inactive = false,
                            Name = "Ngậm dưới lưỡi",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = new Guid("6f90ecfe-4ede-4241-918b-b18245208f56"),
                            Code = "2.01",
                            Inactive = false,
                            Name = "Tiêm bặp",
                            SortOrder = 6
                        },
                        new
                        {
                            Id = new Guid("5ef14843-323d-4fe9-a424-46ca3120fca9"),
                            Code = "2.02",
                            Inactive = false,
                            Name = "Tiêm dưới da",
                            SortOrder = 7
                        },
                        new
                        {
                            Id = new Guid("5d6b6689-0dc3-4f11-94ef-02d288cce18a"),
                            Code = "2.03",
                            Inactive = false,
                            Name = "Tiêm trong da",
                            SortOrder = 8
                        },
                        new
                        {
                            Id = new Guid("cae9f723-e795-48d5-9730-f19edceaa5b6"),
                            Code = "2.04",
                            Inactive = false,
                            Name = "Tiêm tĩnh mạch",
                            SortOrder = 9
                        },
                        new
                        {
                            Id = new Guid("febb52a6-15bc-4e28-bc84-e928b43b126b"),
                            Code = "2.05",
                            Inactive = false,
                            Name = "Tiêm truyền tĩnh mạch",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = new Guid("d075055e-4ed2-4d37-82ae-c9c20cb4f08f"),
                            Code = "2.06",
                            Inactive = false,
                            Name = "Tiêm vào ổ khớp",
                            SortOrder = 11
                        },
                        new
                        {
                            Id = new Guid("d36d932c-00db-451d-9a02-a401dbd89408"),
                            Code = "2.07",
                            Inactive = false,
                            Name = "Tiêm nội nhãn cầu",
                            SortOrder = 12
                        },
                        new
                        {
                            Id = new Guid("e578f37b-9f1b-4098-8659-ac510ced491a"),
                            Code = "2.08",
                            Inactive = false,
                            Name = "Tiêm trong dịch kích của mắt",
                            SortOrder = 13
                        },
                        new
                        {
                            Id = new Guid("c6ffa735-8813-41ea-8984-5700dbee1ea7"),
                            Code = "2.09",
                            Inactive = false,
                            Name = "Tiêm vào các khoang của cơ thế",
                            SortOrder = 14
                        },
                        new
                        {
                            Id = new Guid("2f6e29a1-9a1f-44b0-8f9e-ea1c8716c23b"),
                            Code = "2.10",
                            Inactive = false,
                            Name = "Tiêm",
                            SortOrder = 15
                        },
                        new
                        {
                            Id = new Guid("65ca8fd8-fb9b-4dea-9c0e-c9a3b6b8fbd8"),
                            Code = "2.11",
                            Inactive = false,
                            Name = "Tiêm động mạch khối u",
                            SortOrder = 16
                        },
                        new
                        {
                            Id = new Guid("c0097373-f633-4bee-b670-2d2c35b5d172"),
                            Code = "2.12",
                            Inactive = false,
                            Name = "Tiêm vào khoang tự nhiên",
                            SortOrder = 17
                        },
                        new
                        {
                            Id = new Guid("13165217-8025-44e0-a92b-1f8318d56282"),
                            Code = "2.13",
                            Inactive = false,
                            Name = "Tiêm vào khối u",
                            SortOrder = 18
                        },
                        new
                        {
                            Id = new Guid("6edba7a9-20fe-49c0-9925-ba3b32ed32a0"),
                            Code = "2.14",
                            Inactive = false,
                            Name = "Tiêm truyền tĩnh mạch",
                            SortOrder = 19
                        },
                        new
                        {
                            Id = new Guid("41c24ffd-81f8-44f4-92f7-b3e5d418c8c7"),
                            Code = "2.15",
                            Inactive = false,
                            Name = "Tiêm truyền",
                            SortOrder = 20
                        },
                        new
                        {
                            Id = new Guid("2bd555b2-74ae-4b3f-9d27-de30e10bf16f"),
                            Code = "3.01",
                            Inactive = false,
                            Name = "Bôi",
                            SortOrder = 21
                        },
                        new
                        {
                            Id = new Guid("75017c25-2ad7-4cce-b206-38735fd3584d"),
                            Code = "3.02",
                            Inactive = false,
                            Name = "Xoa ngoài",
                            SortOrder = 22
                        },
                        new
                        {
                            Id = new Guid("71edc6f8-3db6-4375-9005-c5328627fa28"),
                            Code = "3.03",
                            Inactive = false,
                            Name = "Dán trên da",
                            SortOrder = 23
                        },
                        new
                        {
                            Id = new Guid("5a807206-9aef-481d-87b6-88f464e6fd46"),
                            Code = "3.04",
                            Inactive = false,
                            Name = "Xịt ngoài da",
                            SortOrder = 24
                        },
                        new
                        {
                            Id = new Guid("60f3158e-73f2-453f-af90-072b6b25c644"),
                            Code = "3.05",
                            Inactive = false,
                            Name = "Dùng ngoài",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = new Guid("cb51640d-bd7e-4cba-b64d-191d4162efa4"),
                            Code = "4.01",
                            Inactive = false,
                            Name = "Đặt âm đạo",
                            SortOrder = 25
                        },
                        new
                        {
                            Id = new Guid("3df25942-afc9-4ed5-88b3-a0ff7b0ad968"),
                            Code = "4.02",
                            Inactive = false,
                            Name = "Đặt hậu môn",
                            SortOrder = 26
                        },
                        new
                        {
                            Id = new Guid("49783593-80ca-4a9f-8ff9-5d359307498c"),
                            Code = "4.03",
                            Inactive = false,
                            Name = "Thụt hậu môn - trực tràng",
                            SortOrder = 27
                        },
                        new
                        {
                            Id = new Guid("d558492b-6628-40ca-aadf-5dda7701681a"),
                            Code = "4.04",
                            Inactive = false,
                            Name = "Đặt",
                            SortOrder = 28
                        },
                        new
                        {
                            Id = new Guid("7990c54f-dc34-4a62-a8da-201d22c1069d"),
                            Code = "4.05",
                            Inactive = false,
                            Name = "Đặt tử cung",
                            SortOrder = 29
                        },
                        new
                        {
                            Id = new Guid("8f65d7cf-bbd9-44f4-b556-20472aa4a5f0"),
                            Code = "4.06",
                            Inactive = false,
                            Name = "Thụt",
                            SortOrder = 30
                        },
                        new
                        {
                            Id = new Guid("229172a9-7464-4216-8b11-4e587e4c280c"),
                            Code = "5.01",
                            Inactive = false,
                            Name = "Phun mù",
                            SortOrder = 31
                        },
                        new
                        {
                            Id = new Guid("6cdf2301-9621-4f73-9c62-f48ab80245c8"),
                            Code = "5.02",
                            Inactive = false,
                            Name = "Dạng hít",
                            SortOrder = 32
                        },
                        new
                        {
                            Id = new Guid("0df82239-15dd-41ee-afc8-67cb51d5f3f6"),
                            Code = "5.03",
                            Inactive = false,
                            Name = "Bột hít",
                            SortOrder = 33
                        },
                        new
                        {
                            Id = new Guid("ca37423b-25c7-4a84-a32d-8767bf14352b"),
                            Code = "5.04",
                            Inactive = false,
                            Name = "Xịt",
                            SortOrder = 34
                        },
                        new
                        {
                            Id = new Guid("d81efde6-f750-4a66-adf3-a9092bb8ea9b"),
                            Code = "5.05",
                            Inactive = false,
                            Name = "Khí dung",
                            SortOrder = 35
                        },
                        new
                        {
                            Id = new Guid("b12f310c-c12a-4f8f-a9bd-ddd38b4eebcf"),
                            Code = "5.06",
                            Inactive = false,
                            Name = "Đường hô hấp",
                            SortOrder = 36
                        },
                        new
                        {
                            Id = new Guid("8d9cd0b1-2407-4cc3-9d94-314602e26508"),
                            Code = "5.07",
                            Inactive = false,
                            Name = "Xịt mũi",
                            SortOrder = 37
                        },
                        new
                        {
                            Id = new Guid("0c8ba522-0e4b-40a0-9d93-936f5350853e"),
                            Code = "5.08",
                            Inactive = false,
                            Name = "Xịt họng",
                            SortOrder = 38
                        },
                        new
                        {
                            Id = new Guid("7b3a86dc-9b0c-43f8-94a9-e4eec9916e30"),
                            Code = "5.09",
                            Inactive = false,
                            Name = "Thuốc mũi",
                            SortOrder = 39
                        },
                        new
                        {
                            Id = new Guid("1ef26d8f-57d7-423c-a8c6-e3a20a249b37"),
                            Code = "6.01",
                            Inactive = false,
                            Name = "Nhỏ mũi",
                            SortOrder = 40
                        },
                        new
                        {
                            Id = new Guid("e485d3cc-5a96-48c9-9ed3-8725bb0136ef"),
                            Code = "6.02",
                            Inactive = false,
                            Name = "Nhỏ mắt",
                            SortOrder = 41
                        },
                        new
                        {
                            Id = new Guid("379c8a46-145d-4956-af5d-2d48d9d55087"),
                            Code = "6.03",
                            Inactive = false,
                            Name = "Tra mắt",
                            SortOrder = 42
                        },
                        new
                        {
                            Id = new Guid("7d92b632-0ccf-4be5-a044-c3ee549fdb9f"),
                            Code = "6.04",
                            Inactive = false,
                            Name = "Nhỏ tai",
                            SortOrder = 43
                        },
                        new
                        {
                            Id = new Guid("08f7b3c2-09da-4b4a-9c98-75c8562807ee"),
                            Code = "6.09",
                            Inactive = false,
                            Name = "Dung dịch",
                            SortOrder = 44
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicineType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveSubstance")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Concentration")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Content")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("DugStatus")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("HeInCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ImpPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpVatRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllowZeroQuantity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAntibiotics")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrugContainerReturnRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInhalantDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNutraceutical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrescriptionDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrescriptionDrugForChildren")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRadiolabeledDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSponsoredDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTraditionalDrugFormulation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTraditionalHerbalDrug")
                        .HasColumnType("bit");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("MedicineGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MedicineLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Origin")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<decimal?>("OtherExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PackagingSpecifications")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PharmaceuticalDivision")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PharmaceuticalFormulation")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PreparationMethod")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ProcessingLossRate")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ProprietaryDrug")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("QualityStandards")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RequirementUseDug")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ScientificName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ScientificNameChildren")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("ServiceGroupHeInId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tutorial")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("MedicineGroupId");

                    b.HasIndex("MedicineLineId");

                    b.HasIndex("UnitId");

                    b.ToTable("SMedicineTypes", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeInCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HeInName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ServiceGroupHeInId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SurgicalProcedureTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ServiceGroupHeInId");

                    b.HasIndex("ServiceGroupId");

                    b.HasIndex("SurgicalProcedureTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("SServices", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SServiceGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SServiceGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a080ecaa-6cd6-459d-a450-d89351e0904d"),
                            Code = "XN-HH",
                            Inactive = false,
                            Name = "Xét nghiệm huyết học",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = new Guid("33dd59d7-ab44-47fe-8b21-8500bf6e6cee"),
                            Code = "XN-HS",
                            Inactive = false,
                            Name = "Xét nghiệm hóa sinh",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = new Guid("a13fa2cd-851c-4e89-a8ca-bdacee567757"),
                            Code = "XN-VS",
                            Inactive = false,
                            Name = "Xét nghiệm vi sinh",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = new Guid("8878fb20-578e-46a6-8f61-62789c234bde"),
                            Code = "XN-NT",
                            Inactive = false,
                            Name = "Xét nghiệm nước tiểu",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = new Guid("9414782a-9194-4801-91a0-253963a605eb"),
                            Code = "XN-DCD",
                            Inactive = false,
                            Name = "Dịch chọc dò",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = new Guid("d4837941-9cc1-4f53-84f7-3e99edc8f508"),
                            Code = "XN-GPB",
                            Inactive = false,
                            Name = "Giải phẫu bệnh lý",
                            SortOrder = 6
                        },
                        new
                        {
                            Id = new Guid("9b9dfabb-abf9-4fea-b17a-6b5f2c3c01b1"),
                            Code = "XN-KHAC",
                            Inactive = false,
                            Name = "Xét nghiệm khác",
                            SortOrder = 7
                        },
                        new
                        {
                            Id = new Guid("e70f016c-39e7-4ded-aa20-9bffd9fadd59"),
                            Code = "PT",
                            Inactive = false,
                            Name = "Phẫu thuật",
                            SortOrder = 8
                        },
                        new
                        {
                            Id = new Guid("401dbb33-3eb1-44ae-8b3f-51e25996c311"),
                            Code = "KH",
                            Inactive = false,
                            Name = "Khám",
                            SortOrder = 9
                        },
                        new
                        {
                            Id = new Guid("1219fe7a-cecb-4a94-8fdc-2f6d0f48fbc9"),
                            Code = "TDCN-DND",
                            Inactive = false,
                            Name = "Điện não đồ",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = new Guid("906307b7-f7e2-457a-a3d1-62a10ba9daa3"),
                            Code = "TDCN-DTD",
                            Inactive = false,
                            Name = "Điện tâm đồ",
                            SortOrder = 11
                        },
                        new
                        {
                            Id = new Guid("3b3ded9e-71ab-4d31-868c-a704d0604509"),
                            Code = "TDCN",
                            Inactive = false,
                            Name = "Phục hồi chức năng",
                            SortOrder = 12
                        },
                        new
                        {
                            Id = new Guid("0ddd75be-a32c-47f2-b5f1-5138b5997791"),
                            Code = "TT",
                            Inactive = false,
                            Name = "Thủ thuật",
                            SortOrder = 13
                        },
                        new
                        {
                            Id = new Guid("9f474388-e722-4ad2-b194-8a7d8def97fd"),
                            Code = "CDHA-NS",
                            Inactive = false,
                            Name = "Nội soi",
                            SortOrder = 14
                        },
                        new
                        {
                            Id = new Guid("17819944-bc22-47c5-afc3-108881fd5714"),
                            Code = "CDHA-XQ",
                            Inactive = false,
                            Name = "XQuang thường",
                            SortOrder = 15
                        },
                        new
                        {
                            Id = new Guid("ff0073ef-be7c-46e1-adc3-99e58871f5c6"),
                            Code = "CDHA-KTS",
                            Inactive = false,
                            Name = "XQuang kỹ thuật số",
                            SortOrder = 16
                        },
                        new
                        {
                            Id = new Guid("0711132b-d3a9-46d1-9ee1-74154facef37"),
                            Code = "CDHA-MRI",
                            Inactive = false,
                            Name = "Cộng hưởng từ",
                            SortOrder = 17
                        },
                        new
                        {
                            Id = new Guid("4be0ad49-ac80-4a2b-9a92-03b3ffd4f3b6"),
                            Code = "CDHA-CT",
                            Inactive = false,
                            Name = "Cắt lớp vi tính",
                            SortOrder = 18
                        },
                        new
                        {
                            Id = new Guid("914b8e89-4c56-4998-9707-def10fd23fbb"),
                            Code = "CDHA-SA",
                            Inactive = false,
                            Name = "Siêu âm thường",
                            SortOrder = 19
                        },
                        new
                        {
                            Id = new Guid("e43040fc-0e85-436c-8537-5c18e29f61da"),
                            Code = "CDHA-Doppler",
                            Inactive = false,
                            Name = "Siêu âm màu",
                            SortOrder = 20
                        },
                        new
                        {
                            Id = new Guid("12105142-6179-41c2-a56c-5364a2b852f5"),
                            Code = "SA",
                            Inactive = false,
                            Name = "Suất ăn",
                            SortOrder = 21
                        },
                        new
                        {
                            Id = new Guid("1fd09e01-450a-43ce-8bf4-c32aee87753d"),
                            Code = "MAU",
                            Inactive = false,
                            Name = "Máu",
                            SortOrder = 22
                        },
                        new
                        {
                            Id = new Guid("da2f4b6d-fd50-4cab-bebd-319458064222"),
                            Code = "CPM",
                            Inactive = false,
                            Name = "Chế phẩm máu",
                            SortOrder = 23
                        },
                        new
                        {
                            Id = new Guid("964200b8-4ae6-434d-a461-909391444b40"),
                            Code = "VTYT",
                            Inactive = false,
                            Name = "Vật tư",
                            SortOrder = 24
                        },
                        new
                        {
                            Id = new Guid("b4573fb1-32a6-45e3-9782-07066d090a5c"),
                            Code = "THUOC",
                            Inactive = false,
                            Name = "Thuốc",
                            SortOrder = 25
                        },
                        new
                        {
                            Id = new Guid("998836b2-3b5b-4c1c-9b4b-7f6cc1e52b74"),
                            Code = "GI",
                            Inactive = false,
                            Name = "Giường",
                            SortOrder = 26
                        },
                        new
                        {
                            Id = new Guid("3b082a29-237d-4926-8209-f2876d292189"),
                            Code = "VC",
                            Inactive = false,
                            Name = "Vận chuyển",
                            SortOrder = 27
                        },
                        new
                        {
                            Id = new Guid("0a5a8dc0-67a7-41e9-8fb3-1f5e6f8d874d"),
                            Code = "KHAC",
                            Inactive = false,
                            Name = "Khác",
                            SortOrder = 28
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SServiceGroupHeIn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SServiceGroupHeIns", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("45e3f5de-4096-4944-a6b6-69b829b0f61f"),
                            Code = "XN",
                            Inactive = false,
                            Name = "Xét nghiệm",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = new Guid("b2e25f8f-ea5b-4255-b2d8-379bd50a5160"),
                            Code = "CDHA",
                            Inactive = false,
                            Name = "Chẩn đoán hình ảnh",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = new Guid("7a871ff7-c167-4fc8-b652-0aa2ecd72444"),
                            Code = "TDCN",
                            Inactive = false,
                            Name = "Thăm dò chức năng",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = new Guid("7d39f21a-3f78-4c5a-b288-02532a9769d7"),
                            Code = "THUOC-BHYT",
                            Inactive = false,
                            Name = "Thuốc trong danh mục BHYT",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = new Guid("90adcfc5-7518-46e2-995f-d304c31583b5"),
                            Code = "THUOC-NgBHYT",
                            Inactive = false,
                            Name = "Thuốc điều trị ung thư, chống thải ghép ngoài danh mục",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = new Guid("53bf47c7-1414-47cf-8c88-5ba96aa2c978"),
                            Code = "THUOC-TT",
                            Inactive = false,
                            Name = "Thuốc thanh toán theo tỷ lệ",
                            SortOrder = 6
                        },
                        new
                        {
                            Id = new Guid("8a6eee59-ecb3-4bea-89cd-1a83b2d8edd6"),
                            Code = "MAU",
                            Inactive = false,
                            Name = "Máu",
                            SortOrder = 7
                        },
                        new
                        {
                            Id = new Guid("8c7964ad-f476-4009-a630-a14de7f982d6"),
                            Code = "PT",
                            Inactive = false,
                            Name = "Phẫu thuật",
                            SortOrder = 8
                        },
                        new
                        {
                            Id = new Guid("7c84bd56-f322-477c-b64d-50655cbc06e5"),
                            Code = "DVKT-TL",
                            Inactive = false,
                            Name = "DVKT thanh toán theo tỷ lệ",
                            SortOrder = 9
                        },
                        new
                        {
                            Id = new Guid("8a360961-1c49-4382-a7ce-ce70358ae25a"),
                            Code = "VTYT-BHYT",
                            Inactive = false,
                            Name = "Vật tư y tế trong danh mục BHYT",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = new Guid("8868dfd1-fbc7-40c2-83b1-cb0f894cf566"),
                            Code = "VTYT-TT",
                            Inactive = false,
                            Name = "VTYT thanh toán theo tỷ lệ",
                            SortOrder = 11
                        },
                        new
                        {
                            Id = new Guid("81a882db-d465-402f-a391-d3726d698950"),
                            Code = "VC",
                            Inactive = false,
                            Name = "Vận chuyển",
                            SortOrder = 12
                        },
                        new
                        {
                            Id = new Guid("75b2f46f-f841-4cbe-9513-93c44306e78e"),
                            Code = "KHAM",
                            Inactive = false,
                            Name = "Khám bệnh",
                            SortOrder = 13
                        },
                        new
                        {
                            Id = new Guid("675d16db-cd35-4229-b042-82aef4718aff"),
                            Code = "14",
                            Inactive = false,
                            Name = "Giường điều trị ngoại trú",
                            SortOrder = 14
                        },
                        new
                        {
                            Id = new Guid("156ec951-453d-4e3f-800e-33f850942874"),
                            Code = "GI-NT",
                            Inactive = false,
                            Name = "Giường điều trị nội trú",
                            SortOrder = 15
                        },
                        new
                        {
                            Id = new Guid("22048fa7-a9e4-4ac7-89a6-e9e34e4811b4"),
                            Code = "GI-LUU",
                            Inactive = false,
                            Name = "Ngày giường lưu",
                            SortOrder = 16
                        },
                        new
                        {
                            Id = new Guid("7802d629-9e6a-48a7-825c-c91f530785ac"),
                            Code = "CPM",
                            Inactive = false,
                            Name = "Chế phẩm máu",
                            SortOrder = 17
                        },
                        new
                        {
                            Id = new Guid("199b0c88-0ef5-475c-a426-c0547cd13443"),
                            Code = "TT",
                            Inactive = false,
                            Name = "Thủ thuật",
                            SortOrder = 18
                        },
                        new
                        {
                            Id = new Guid("dc75e4bb-6e85-4a90-ae29-112b7d2873f9"),
                            Code = "VTYT-NgBHYT",
                            Inactive = false,
                            Name = "Vật tư y tế ngoài danh mục BHYT",
                            SortOrder = 19
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SServicePricePolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CeilingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NewUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OldUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PatientTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaymentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PatientTypeId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SServicePricePolicies", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SServiceResultIndice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("FemaleFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FemaleTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaleFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaleTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("SServiceResultIndices", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SSurgicalProcedureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SSurgicalProcedureTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PTDB",
                            Name = "Phẫu thuật đặc biệt",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "PT01",
                            Name = "Phẫu thuật loại 1",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            Code = "PT02",
                            Name = "Phẫu thuật loại 2",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            Code = "PT03",
                            Name = "Phẫu thuật loại 3",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            Code = "TTDB",
                            Name = "Thủ thuật đặc biệt",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 6,
                            Code = "TT01",
                            Name = "Thủ thuật loại 1",
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 7,
                            Code = "TT02",
                            Name = "Thủ thuật loại 2",
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 8,
                            Code = "TT03",
                            Name = "Thủ thuật loại 3",
                            SortOrder = 8
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SBranch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SBranchs", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SCareer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SCareers", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HeInCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("SCountries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b24b562-1294-4537-a69a-26ac34c41521"),
                            Code = "AD",
                            HeInCode = "105",
                            Inactive = false,
                            Name = "Andorra"
                        },
                        new
                        {
                            Id = new Guid("fb10ce71-e68a-4a70-bf7e-5edee9388d48"),
                            Code = "AE",
                            HeInCode = "137",
                            Inactive = false,
                            Name = "Các Tiểu Vương quốc Ả Rập Thống nhất"
                        },
                        new
                        {
                            Id = new Guid("8592d87f-720b-48e7-82ee-e82d64cbf984"),
                            Code = "AG",
                            HeInCode = "108",
                            Inactive = false,
                            Name = "Antigua và Barbuda"
                        },
                        new
                        {
                            Id = new Guid("e4c05566-0c8d-42a4-a2e9-ad4d6d33b35f"),
                            Code = "AI",
                            HeInCode = "AI",
                            Inactive = false,
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = new Guid("66533605-d826-4aec-9536-e4d30effefda"),
                            Code = "AL",
                            HeInCode = "103",
                            Inactive = false,
                            Name = "Albania"
                        },
                        new
                        {
                            Id = new Guid("af3badc9-b6da-4eb0-8a42-ecf8dfd6ae19"),
                            Code = "AM",
                            HeInCode = "112",
                            Inactive = false,
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = new Guid("25b7ed9b-8bfd-4601-a4c5-a59dfe5a3fab"),
                            Code = "AN",
                            HeInCode = "AN",
                            Inactive = false,
                            Name = "Netherlands antilles"
                        },
                        new
                        {
                            Id = new Guid("5701a860-793e-4660-9302-005b27d4348e"),
                            Code = "AO",
                            HeInCode = "106",
                            Inactive = false,
                            Name = "Angola"
                        },
                        new
                        {
                            Id = new Guid("9eb57842-f592-4080-affd-71b43f7d0517"),
                            Code = "AQ",
                            HeInCode = "AQ",
                            Inactive = false,
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = new Guid("fd32d265-24dd-4073-a4b8-59e6358b59ed"),
                            Code = "AR",
                            HeInCode = "111",
                            Inactive = false,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("21668f2b-b3d0-4927-9d67-3f9eee4736d6"),
                            Code = "AS",
                            HeInCode = "AS",
                            Inactive = false,
                            Name = "Samoa thuộc Hoa Kỳ"
                        },
                        new
                        {
                            Id = new Guid("6c408b50-b4be-4eca-a710-11a6d914cf4f"),
                            Code = "AT",
                            HeInCode = "109",
                            Inactive = false,
                            Name = "Áo"
                        },
                        new
                        {
                            Id = new Guid("fc5a0c05-ebac-4906-8a9f-dddcdbcc0a9d"),
                            Code = "AU",
                            HeInCode = "284",
                            Inactive = false,
                            Name = "Úc"
                        },
                        new
                        {
                            Id = new Guid("e5837adb-d926-41f1-8434-73fed9db7504"),
                            Code = "AW",
                            HeInCode = "AW",
                            Inactive = false,
                            Name = "Aruba việt nam"
                        },
                        new
                        {
                            Id = new Guid("1c3907c5-3cd4-4530-a28c-6d4acceec175"),
                            Code = "AZ",
                            HeInCode = "113",
                            Inactive = false,
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = new Guid("45a0ebe0-51be-423b-8885-7a7bf06e6f95"),
                            Code = "BA",
                            HeInCode = "127",
                            Inactive = false,
                            Name = "Bosna và Hercegovina"
                        },
                        new
                        {
                            Id = new Guid("332e0e9e-0182-47a0-b894-ade71da83708"),
                            Code = "BB",
                            HeInCode = "120",
                            Inactive = false,
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = new Guid("7f233816-fe94-4941-8125-b62c88410fa9"),
                            Code = "BD",
                            HeInCode = "119",
                            Inactive = false,
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = new Guid("720aaa71-3cc0-470f-b56c-472ac37a6574"),
                            Code = "BE",
                            HeInCode = "125",
                            Inactive = false,
                            Name = "Bỉ"
                        },
                        new
                        {
                            Id = new Guid("e369137c-1730-4809-88e4-e43031327233"),
                            Code = "BF",
                            HeInCode = "134",
                            Inactive = false,
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Id = new Guid("e180ff8a-4e49-4edd-9168-21b372b8d9b7"),
                            Code = "BG",
                            HeInCode = "133",
                            Inactive = false,
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = new Guid("1bd96043-4837-4ab4-8812-0230d7cdc37c"),
                            Code = "BH",
                            HeInCode = "117",
                            Inactive = false,
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = new Guid("09127bf0-ff5d-4660-8fef-18b3107bf295"),
                            Code = "BI",
                            HeInCode = "135",
                            Inactive = false,
                            Name = "Burundi"
                        },
                        new
                        {
                            Id = new Guid("fd235817-1607-4f4c-83c7-ff5bd0012896"),
                            Code = "BJ",
                            HeInCode = "123",
                            Inactive = false,
                            Name = "Benin"
                        },
                        new
                        {
                            Id = new Guid("7b0c9a9c-e730-4b96-9372-e9ef8ab5339b"),
                            Code = "BM",
                            HeInCode = "BM",
                            Inactive = false,
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = new Guid("c5c14db2-753f-4e28-88b5-3b9e502fa0c6"),
                            Code = "BN",
                            HeInCode = "132",
                            Inactive = false,
                            Name = "Brunei"
                        },
                        new
                        {
                            Id = new Guid("aa745539-b444-49d2-ad13-14149f8a1645"),
                            Code = "BO",
                            HeInCode = "126",
                            Inactive = false,
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = new Guid("1d374c8c-88c5-49ae-9c9c-0b2b362b1198"),
                            Code = "BR",
                            HeInCode = "131",
                            Inactive = false,
                            Name = "Brasil"
                        },
                        new
                        {
                            Id = new Guid("8764ee96-c950-44cf-a1f4-7636126c671b"),
                            Code = "BS",
                            HeInCode = "116",
                            Inactive = false,
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = new Guid("d94b5935-e6d2-4aa7-b9f7-d332badacd8d"),
                            Code = "BT",
                            HeInCode = "124",
                            Inactive = false,
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = new Guid("5f4a7dfd-c3ed-4796-bde2-94199e595ef0"),
                            Code = "BV",
                            HeInCode = "BV",
                            Inactive = false,
                            Name = "Bouvet island"
                        },
                        new
                        {
                            Id = new Guid("ddf4ecad-6f97-4bde-84fe-2b9dc51f0ffd"),
                            Code = "BW",
                            HeInCode = "128",
                            Inactive = false,
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = new Guid("53fdbb96-c808-4474-83bc-084e422a8b95"),
                            Code = "BY",
                            HeInCode = "121",
                            Inactive = false,
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = new Guid("76c42f0f-bfb2-4a11-b5a4-e854f74e72cd"),
                            Code = "BZ",
                            HeInCode = "122",
                            Inactive = false,
                            Name = "Belize"
                        },
                        new
                        {
                            Id = new Guid("686b79de-db2f-4ccd-946c-1bef80cd503e"),
                            Code = "CA",
                            HeInCode = "140",
                            Inactive = false,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("2facb682-01d5-4798-bf0a-928bd471ecb3"),
                            Code = "CC",
                            HeInCode = "CC",
                            Inactive = false,
                            Name = "Cocos (keeling) islands"
                        },
                        new
                        {
                            Id = new Guid("484be820-41ff-4911-94c6-2d2969764ac4"),
                            Code = "CD",
                            HeInCode = "145",
                            Inactive = false,
                            Name = "Cộng hòa Dân chủ Congo"
                        },
                        new
                        {
                            Id = new Guid("46651a82-3d63-4a24-baff-9bb1ee8ac492"),
                            Code = "CF",
                            HeInCode = "280",
                            Inactive = false,
                            Name = "Trung Phi"
                        },
                        new
                        {
                            Id = new Guid("75de9dea-ef0f-4492-890a-f5af36cce7aa"),
                            Code = "CG",
                            HeInCode = "144",
                            Inactive = false,
                            Name = "Cộng hòa Congo"
                        },
                        new
                        {
                            Id = new Guid("1df44627-4127-48c0-bbc7-2afc64cb75d2"),
                            Code = "CH",
                            HeInCode = "274",
                            Inactive = false,
                            Name = "Thụy Sĩ"
                        },
                        new
                        {
                            Id = new Guid("4452efd3-9727-4c5c-9cc9-76f7270c673d"),
                            Code = "CI",
                            HeInCode = "130",
                            Inactive = false,
                            Name = "Bờ Biển Ngà"
                        },
                        new
                        {
                            Id = new Guid("b4e019b1-042b-465c-baf9-60d525d9b85c"),
                            Code = "CK",
                            HeInCode = "CK",
                            Inactive = false,
                            Name = "Cook islands"
                        },
                        new
                        {
                            Id = new Guid("067dbcfb-9729-4016-aa0f-526f43657542"),
                            Code = "CL",
                            HeInCode = "141",
                            Inactive = false,
                            Name = "Chile"
                        },
                        new
                        {
                            Id = new Guid("f5874f17-6c1e-4c07-b8bf-41b76546f6f0"),
                            Code = "CM",
                            HeInCode = "138",
                            Inactive = false,
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = new Guid("3de67d92-a46e-4113-bd12-2e89a48aa1f0"),
                            Code = "CN",
                            HeInCode = "279",
                            Inactive = false,
                            Name = "Trung Quốc"
                        },
                        new
                        {
                            Id = new Guid("19b9d4e2-dd04-4d66-ba70-e71a800b8563"),
                            Code = "CO",
                            HeInCode = "142",
                            Inactive = false,
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = new Guid("d576474f-de6a-45fc-bd19-e18a2915f1a4"),
                            Code = "CR",
                            HeInCode = "146",
                            Inactive = false,
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = new Guid("be946a16-a1af-499c-9bd8-ca12a22fb69c"),
                            Code = "CU",
                            HeInCode = "149",
                            Inactive = false,
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = new Guid("93fc49be-bd23-41c3-8538-4b424a7806da"),
                            Code = "CV",
                            HeInCode = "CV",
                            Inactive = false,
                            Name = "Cape verde"
                        },
                        new
                        {
                            Id = new Guid("02cd862f-7bf2-4dee-9d8d-869f67659eac"),
                            Code = "CX",
                            HeInCode = "CX",
                            Inactive = false,
                            Name = "Christmas island"
                        },
                        new
                        {
                            Id = new Guid("7ef68b6d-2d6b-4688-95bc-d0fd79ffb6c5"),
                            Code = "CY",
                            HeInCode = "191",
                            Inactive = false,
                            Name = "Síp"
                        },
                        new
                        {
                            Id = new Guid("23063395-5d36-41c9-9711-66722ab8849f"),
                            Code = "CZ",
                            HeInCode = "252",
                            Inactive = false,
                            Name = "Séc"
                        },
                        new
                        {
                            Id = new Guid("9d5769fe-b3ae-4697-9150-44674e8008ba"),
                            Code = "DE",
                            HeInCode = "155",
                            Inactive = false,
                            Name = "Đức"
                        },
                        new
                        {
                            Id = new Guid("a1080c01-e5bb-4e3f-8784-f0678f1eff58"),
                            Code = "DJ",
                            HeInCode = "150",
                            Inactive = false,
                            Name = "Djibouti"
                        },
                        new
                        {
                            Id = new Guid("502c14cb-18ea-461f-9bc0-9591b056284c"),
                            Code = "DK",
                            HeInCode = "153",
                            Inactive = false,
                            Name = "Đan Mạch"
                        },
                        new
                        {
                            Id = new Guid("7bea406c-221d-45dd-aca6-a2ceb90741aa"),
                            Code = "DM",
                            HeInCode = "151",
                            Inactive = false,
                            Name = "Dominica"
                        },
                        new
                        {
                            Id = new Guid("58d12ab1-4946-45f9-bef5-354e5803f357"),
                            Code = "DO",
                            HeInCode = "152",
                            Inactive = false,
                            Name = "Cộng hòa Dominicana"
                        },
                        new
                        {
                            Id = new Guid("e6e7518f-73eb-4010-b0cf-6dcc5c8f8e01"),
                            Code = "DZ",
                            HeInCode = "104",
                            Inactive = false,
                            Name = "Algérie"
                        },
                        new
                        {
                            Id = new Guid("a3597652-cc84-40ff-b143-208ee8473e93"),
                            Code = "EA",
                            HeInCode = "154",
                            Inactive = false,
                            Name = "Đông Timor"
                        },
                        new
                        {
                            Id = new Guid("c6f6287f-39f6-4470-ad46-ac539eef3052"),
                            Code = "EC",
                            HeInCode = "156",
                            Inactive = false,
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = new Guid("abdfeb5b-a4b8-4ab1-b6b8-83f7fb72ec23"),
                            Code = "EE",
                            HeInCode = "159",
                            Inactive = false,
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = new Guid("8f800608-e254-418d-8163-78f71be4873f"),
                            Code = "EG",
                            HeInCode = "102",
                            Inactive = false,
                            Name = "Ai Cập"
                        },
                        new
                        {
                            Id = new Guid("fe657d37-7960-4bb3-8f15-81666fca928d"),
                            Code = "EH",
                            HeInCode = "EH",
                            Inactive = false,
                            Name = "Western sahara"
                        },
                        new
                        {
                            Id = new Guid("4dcd4bda-0da9-415d-8f7e-ecd5841ad250"),
                            Code = "ER",
                            HeInCode = "158",
                            Inactive = false,
                            Name = "Eritrea"
                        },
                        new
                        {
                            Id = new Guid("5dc567de-1249-4aaa-9d49-04dcd3501220"),
                            Code = "ES",
                            HeInCode = "269",
                            Inactive = false,
                            Name = "Tây Ban Nha"
                        },
                        new
                        {
                            Id = new Guid("ba7304bd-7e25-4731-a60f-10c13589c71a"),
                            Code = "ET",
                            HeInCode = "160",
                            Inactive = false,
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = new Guid("10a98338-7167-4e5b-b3e4-9515f63bb43d"),
                            Code = "FI",
                            HeInCode = "241",
                            Inactive = false,
                            Name = "Phần Lan"
                        },
                        new
                        {
                            Id = new Guid("da333d92-e16c-4b49-b9d8-669df9032f82"),
                            Code = "FJ",
                            HeInCode = "161",
                            Inactive = false,
                            Name = "Fiji"
                        },
                        new
                        {
                            Id = new Guid("f36eb030-510e-4ca0-b7c4-a1c1ef656dd6"),
                            Code = "FK",
                            HeInCode = "FK",
                            Inactive = false,
                            Name = "Falkland islands (malvinas)"
                        },
                        new
                        {
                            Id = new Guid("c4065df0-2539-4046-bb77-7d699a072734"),
                            Code = "FM",
                            HeInCode = "214",
                            Inactive = false,
                            Name = "Micronesia"
                        },
                        new
                        {
                            Id = new Guid("b83be42b-cde9-4dc3-a838-d8197d2c678f"),
                            Code = "FO",
                            HeInCode = "FO",
                            Inactive = false,
                            Name = "Faroe islands"
                        },
                        new
                        {
                            Id = new Guid("226d663e-46ee-4ab2-b385-b062345debd9"),
                            Code = "FR",
                            HeInCode = "240",
                            Inactive = false,
                            Name = "Pháp"
                        },
                        new
                        {
                            Id = new Guid("24c5f9fa-e493-43a1-9d2a-c6d25dc2ea89"),
                            Code = "FY",
                            HeInCode = "254",
                            Inactive = false,
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("f1c02c7d-3154-4e55-817c-1e24f6eef729"),
                            Code = "GA",
                            HeInCode = "162",
                            Inactive = false,
                            Name = "Gabon"
                        },
                        new
                        {
                            Id = new Guid("e9455b51-bd57-482f-a979-5ecf6c8c4afd"),
                            Code = "GB",
                            HeInCode = "107",
                            Inactive = false,
                            Name = "Vương quốc Liên hiệp Anh và Bắc Ireland"
                        },
                        new
                        {
                            Id = new Guid("573dec77-5908-42b2-b1a5-8a5ee8407dee"),
                            Code = "GD",
                            HeInCode = "165",
                            Inactive = false,
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = new Guid("9ded845f-06a1-4651-8903-bc46f7978c84"),
                            Code = "GE",
                            HeInCode = "GE",
                            Inactive = false,
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = new Guid("212573b7-ec34-4844-b150-74f567de2c5d"),
                            Code = "GF",
                            HeInCode = "GF",
                            Inactive = false,
                            Name = "French guiana"
                        },
                        new
                        {
                            Id = new Guid("d34d65e5-253f-4324-9aee-f74045802e47"),
                            Code = "GG",
                            HeInCode = "GG",
                            Inactive = false,
                            Name = "Guernsey"
                        },
                        new
                        {
                            Id = new Guid("62b0c6c0-4a45-4f33-b35e-d184d815518e"),
                            Code = "GH",
                            HeInCode = "164",
                            Inactive = false,
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = new Guid("cdd52492-d981-4972-9f41-4b1774c002ee"),
                            Code = "GI",
                            HeInCode = "GI",
                            Inactive = false,
                            Name = "Gibraltar"
                        },
                        new
                        {
                            Id = new Guid("f9375017-9897-4487-8916-c98d22fd05b9"),
                            Code = "GL",
                            HeInCode = "GL",
                            Inactive = false,
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = new Guid("347a0e24-276d-4a54-b92b-4b88b60179af"),
                            Code = "GM",
                            HeInCode = "163",
                            Inactive = false,
                            Name = "Gambia"
                        },
                        new
                        {
                            Id = new Guid("25df127f-9fb7-4f1d-8a4f-484364e15f91"),
                            Code = "GN",
                            HeInCode = "170",
                            Inactive = false,
                            Name = "Guinea"
                        },
                        new
                        {
                            Id = new Guid("98062645-5015-4d8c-886e-3fb70c247ada"),
                            Code = "GP",
                            HeInCode = "GP",
                            Inactive = false,
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = new Guid("298cf3d9-cf13-401f-86b5-368d1c71ec77"),
                            Code = "GQ",
                            HeInCode = "169",
                            Inactive = false,
                            Name = "Guinea Xích Đạo"
                        },
                        new
                        {
                            Id = new Guid("8a6a8442-1533-4bba-9a05-ed707122573e"),
                            Code = "GR",
                            HeInCode = "178",
                            Inactive = false,
                            Name = "Hy Lạp"
                        },
                        new
                        {
                            Id = new Guid("3adb70b0-ae40-4ac0-8a27-15398cc79d49"),
                            Code = "GS",
                            HeInCode = "GS",
                            Inactive = false,
                            Name = "South georgia and the south sandwich islands"
                        },
                        new
                        {
                            Id = new Guid("4dbc51c5-3faa-4e76-b0d5-a28df95c5c01"),
                            Code = "GT",
                            HeInCode = "167",
                            Inactive = false,
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = new Guid("e4acc3fd-7e2d-4927-b7e8-797cb8a29a86"),
                            Code = "GU",
                            HeInCode = "GU",
                            Inactive = false,
                            Name = "Guam"
                        },
                        new
                        {
                            Id = new Guid("d892c6c0-bf86-4487-ab8b-5af35cc32a0c"),
                            Code = "GV",
                            HeInCode = "171",
                            Inactive = false,
                            Name = "Guyana"
                        },
                        new
                        {
                            Id = new Guid("3dac050e-a2a6-469b-b0bb-def2e17544a5"),
                            Code = "GW",
                            HeInCode = "168",
                            Inactive = false,
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = new Guid("d3c10501-b94f-4a0e-b871-80d4b3d7bbbb"),
                            Code = "HK",
                            HeInCode = "HK",
                            Inactive = false,
                            Name = "Hong kong"
                        },
                        new
                        {
                            Id = new Guid("3edffd99-5e14-4466-9f3e-a72ab48711d7"),
                            Code = "HM",
                            HeInCode = "HM",
                            Inactive = false,
                            Name = "Heard and mc donald islands"
                        },
                        new
                        {
                            Id = new Guid("d50a063a-82ef-4b56-858e-1a8794b32878"),
                            Code = "HN",
                            HeInCode = "176",
                            Inactive = false,
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = new Guid("fd0ac376-bf65-4bf8-9067-245691aa1827"),
                            Code = "HR",
                            HeInCode = "147",
                            Inactive = false,
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = new Guid("c831fb16-910b-4939-804a-1052b8f8adc1"),
                            Code = "HT",
                            HeInCode = "172",
                            Inactive = false,
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = new Guid("1a52542a-e4e8-4514-b84f-d8f7a0ce8bf5"),
                            Code = "HU",
                            HeInCode = "177",
                            Inactive = false,
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = new Guid("e3a2237c-9d57-462f-bad8-7a78856303c8"),
                            Code = "ID",
                            HeInCode = "180",
                            Inactive = false,
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = new Guid("4e6e77af-56d6-4314-ac68-c39713511d70"),
                            Code = "IE",
                            HeInCode = "183",
                            Inactive = false,
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = new Guid("060539cd-d169-45c2-bec2-28a91e41bcb3"),
                            Code = "IL",
                            HeInCode = "184",
                            Inactive = false,
                            Name = "Israel"
                        },
                        new
                        {
                            Id = new Guid("4bab2495-c861-47e7-82e6-1806fd87b767"),
                            Code = "IM",
                            HeInCode = "IM",
                            Inactive = false,
                            Name = "Isle of man"
                        },
                        new
                        {
                            Id = new Guid("edcecb3c-ffcb-451f-8e24-02a0bf6499ae"),
                            Code = "IN",
                            HeInCode = "115",
                            Inactive = false,
                            Name = "Cộng hòa Ấn Độ"
                        },
                        new
                        {
                            Id = new Guid("d200b4b5-7435-41a9-be8b-b6a80e14120b"),
                            Code = "IO",
                            HeInCode = "IO",
                            Inactive = false,
                            Name = "British indian ocean territory"
                        },
                        new
                        {
                            Id = new Guid("b16a509f-5c70-42b1-a05e-6d4426c721ca"),
                            Code = "IQ",
                            HeInCode = "182",
                            Inactive = false,
                            Name = "Iraq"
                        },
                        new
                        {
                            Id = new Guid("58357a87-d3a9-4ea4-82ea-eb7775f1c568"),
                            Code = "IR",
                            HeInCode = "181",
                            Inactive = false,
                            Name = "Iran"
                        },
                        new
                        {
                            Id = new Guid("10f310c4-857b-431b-934c-19ebc560571c"),
                            Code = "IS",
                            HeInCode = "179",
                            Inactive = false,
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = new Guid("aa3d56b9-f398-4be1-b8ae-9f8563101b6e"),
                            Code = "IT",
                            HeInCode = "292",
                            Inactive = false,
                            Name = "Ý"
                        },
                        new
                        {
                            Id = new Guid("50202b21-f7c0-42eb-89bd-4470e82f3943"),
                            Code = "JE",
                            HeInCode = "JE",
                            Inactive = false,
                            Name = "Jersey"
                        },
                        new
                        {
                            Id = new Guid("cbf1c521-494b-4981-9dc9-b6a1b229c01d"),
                            Code = "JM",
                            HeInCode = "185",
                            Inactive = false,
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = new Guid("665d03c6-346e-43d8-ad21-31492b4382aa"),
                            Code = "JO",
                            HeInCode = "186",
                            Inactive = false,
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = new Guid("9601fc62-41b1-44af-af8e-8a03c91c96b8"),
                            Code = "JP",
                            HeInCode = "232",
                            Inactive = false,
                            Name = "Nhật Bản"
                        },
                        new
                        {
                            Id = new Guid("66400b32-893a-489c-a5e1-180d55fb20d4"),
                            Code = "KE",
                            HeInCode = "188",
                            Inactive = false,
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("509f7d40-e740-472f-8a7a-84b5a527eb96"),
                            Code = "KG",
                            HeInCode = "192",
                            Inactive = false,
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = new Guid("f468cb27-57fb-4b75-b3b7-70bb33ca2705"),
                            Code = "KH",
                            HeInCode = "139",
                            Inactive = false,
                            Name = "Campuchia"
                        },
                        new
                        {
                            Id = new Guid("62947f31-4a3e-441b-a9d2-9642ce61de2f"),
                            Code = "KI",
                            HeInCode = "189",
                            Inactive = false,
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = new Guid("7afaefc0-9aa8-4ba7-98ae-618682a5be7f"),
                            Code = "KM",
                            HeInCode = "143",
                            Inactive = false,
                            Name = "Comoros"
                        },
                        new
                        {
                            Id = new Guid("506ddd2c-4f81-4d6d-806c-4c9e605bab3f"),
                            Code = "KN",
                            HeInCode = "246",
                            Inactive = false,
                            Name = "Saint Kitts và Nevis"
                        },
                        new
                        {
                            Id = new Guid("07c04d8d-4e1c-4896-ba8a-7d8172562b37"),
                            Code = "KP",
                            HeInCode = "277",
                            Inactive = false,
                            Name = "Triều Tiên"
                        },
                        new
                        {
                            Id = new Guid("39ef7fcd-b539-46be-90a6-bc3f6d1524d8"),
                            Code = "KR",
                            HeInCode = "174",
                            Inactive = false,
                            Name = "Hàn Quốc"
                        },
                        new
                        {
                            Id = new Guid("90b2a6a0-bacd-4175-80e9-b8fde9233786"),
                            Code = "KW",
                            HeInCode = "190",
                            Inactive = false,
                            Name = "Kuwait"
                        },
                        new
                        {
                            Id = new Guid("994cf06f-b833-4415-84e0-94f3847b6dd8"),
                            Code = "KY",
                            HeInCode = "KY",
                            Inactive = false,
                            Name = "Cayman islands"
                        },
                        new
                        {
                            Id = new Guid("1cc02fda-f061-49ad-a4f1-ecb564a28c88"),
                            Code = "KZ",
                            HeInCode = "187",
                            Inactive = false,
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            Id = new Guid("18be6a2d-0cc9-4e57-9b95-0fd5e0999094"),
                            Code = "LA",
                            HeInCode = "193",
                            Inactive = false,
                            Name = "Lào"
                        },
                        new
                        {
                            Id = new Guid("66169c75-2aa7-409a-a7b9-d8cfe6ac80c0"),
                            Code = "LB",
                            HeInCode = "196",
                            Inactive = false,
                            Name = "Li ban"
                        },
                        new
                        {
                            Id = new Guid("2eab2085-d20b-4cc4-a85b-7567c9ce6ea9"),
                            Code = "LC",
                            HeInCode = "247",
                            Inactive = false,
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            Id = new Guid("9412c9e0-c4fe-442f-8b13-ea064bf48703"),
                            Code = "LI",
                            HeInCode = "199",
                            Inactive = false,
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            Id = new Guid("affdf19e-5ed4-497a-97d0-0fc95a547785"),
                            Code = "LK",
                            HeInCode = "262",
                            Inactive = false,
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Id = new Guid("54ca17f4-f6f7-4bcf-9809-8d45153c2271"),
                            Code = "LR",
                            HeInCode = "197",
                            Inactive = false,
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = new Guid("426516a2-46e9-4103-8b44-22b4a30b21ae"),
                            Code = "LS",
                            HeInCode = "195",
                            Inactive = false,
                            Name = "Lesotho"
                        },
                        new
                        {
                            Id = new Guid("58486abc-86a6-4bb8-a610-eb0e4bdf0b73"),
                            Code = "LT",
                            HeInCode = "200",
                            Inactive = false,
                            Name = "Litva"
                        },
                        new
                        {
                            Id = new Guid("f034e368-335c-4a9f-a039-b7ea83f8a315"),
                            Code = "LU",
                            HeInCode = "201",
                            Inactive = false,
                            Name = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("882c80ef-806d-4370-9fb1-f00a13a7a5c1"),
                            Code = "LV",
                            HeInCode = "194",
                            Inactive = false,
                            Name = "Latvia"
                        },
                        new
                        {
                            Id = new Guid("f5fdcb6c-e0c5-4a57-adca-e743ba60ccee"),
                            Code = "LY",
                            HeInCode = "198",
                            Inactive = false,
                            Name = "Libya"
                        },
                        new
                        {
                            Id = new Guid("1d41f179-ba78-41d6-8ecf-595c7d6de65a"),
                            Code = "MA",
                            HeInCode = "209",
                            Inactive = false,
                            Name = "Maroc"
                        },
                        new
                        {
                            Id = new Guid("5b526a49-1694-4eb8-b602-4e150d12184d"),
                            Code = "MC",
                            HeInCode = "216",
                            Inactive = false,
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = new Guid("cc2a4d3b-bae2-4602-9d23-4d4d2d918699"),
                            Code = "MD",
                            HeInCode = "215",
                            Inactive = false,
                            Name = "Moldova"
                        },
                        new
                        {
                            Id = new Guid("b1829e62-c3dd-4f65-8c41-fdbe26aedb93"),
                            Code = "MG",
                            HeInCode = "203",
                            Inactive = false,
                            Name = "Madagascar"
                        },
                        new
                        {
                            Id = new Guid("bcb96598-0e05-4316-86d3-80413326555a"),
                            Code = "MH",
                            HeInCode = "210",
                            Inactive = false,
                            Name = "Quần đảo Marshall"
                        },
                        new
                        {
                            Id = new Guid("b83926c4-6963-4f82-97f7-dffa6e87ea7d"),
                            Code = "MK",
                            HeInCode = "202",
                            Inactive = false,
                            Name = "Macedonia"
                        },
                        new
                        {
                            Id = new Guid("b171e933-4b7d-46f5-802a-14c5c9234ed7"),
                            Code = "ML",
                            HeInCode = "207",
                            Inactive = false,
                            Name = "Mali"
                        },
                        new
                        {
                            Id = new Guid("cf8c2ebc-2ed1-404c-875c-d2151d54ab9e"),
                            Code = "MM",
                            HeInCode = "220",
                            Inactive = false,
                            Name = "Myanma"
                        },
                        new
                        {
                            Id = new Guid("fd21963c-7b5e-44a8-8d70-2edbda437946"),
                            Code = "MN",
                            HeInCode = "217",
                            Inactive = false,
                            Name = "Mông Cổ"
                        },
                        new
                        {
                            Id = new Guid("6477d7a3-465e-4277-a4eb-ef09b13f5eca"),
                            Code = "MO",
                            HeInCode = "MO",
                            Inactive = false,
                            Name = "Macau"
                        },
                        new
                        {
                            Id = new Guid("3af1daa8-65e1-4502-823d-3c8530608104"),
                            Code = "MP",
                            HeInCode = "MP",
                            Inactive = false,
                            Name = "Northern mariana islands"
                        },
                        new
                        {
                            Id = new Guid("77365013-80d7-44d5-bd8d-472542cac431"),
                            Code = "MQ",
                            HeInCode = "MQ",
                            Inactive = false,
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = new Guid("aa4399ec-1ff3-4837-a68e-0df0720162cb"),
                            Code = "MR",
                            HeInCode = "211",
                            Inactive = false,
                            Name = "Mauritanie"
                        },
                        new
                        {
                            Id = new Guid("d2ebac27-3463-40cb-9eb2-86e1da12a3ba"),
                            Code = "MS",
                            HeInCode = "MS",
                            Inactive = false,
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = new Guid("78dcfd52-de7b-4c1d-9ded-0e5d3f7a8a35"),
                            Code = "MT",
                            HeInCode = "208",
                            Inactive = false,
                            Name = "Malta"
                        },
                        new
                        {
                            Id = new Guid("f1218849-b5cf-43c8-b3c4-b1ff145f27fc"),
                            Code = "MU",
                            HeInCode = "212",
                            Inactive = false,
                            Name = "Mauritius"
                        },
                        new
                        {
                            Id = new Guid("8a003437-323c-451c-b211-1886f79c25f1"),
                            Code = "MV",
                            HeInCode = "206",
                            Inactive = false,
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = new Guid("52595376-4b2b-4746-bb17-16f7ba234a33"),
                            Code = "MW",
                            HeInCode = "204",
                            Inactive = false,
                            Name = "Malawi"
                        },
                        new
                        {
                            Id = new Guid("92b69f82-f3e2-4ea9-9d4b-1763b1a75dec"),
                            Code = "MX",
                            HeInCode = "213",
                            Inactive = false,
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = new Guid("22174cd0-7b2d-4c6b-bb6c-5273e63d28f0"),
                            Code = "MY",
                            HeInCode = "205",
                            Inactive = false,
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = new Guid("4589f414-2018-4196-a42a-68fa60b41dae"),
                            Code = "MZ",
                            HeInCode = "219",
                            Inactive = false,
                            Name = "Mozambique"
                        },
                        new
                        {
                            Id = new Guid("ee707e39-4195-426c-abf9-1ce21a771350"),
                            Code = "NA",
                            HeInCode = "221",
                            Inactive = false,
                            Name = "Namibia"
                        },
                        new
                        {
                            Id = new Guid("f5f9c1ed-f4fb-4cff-aee3-2bcb0d8eed3e"),
                            Code = "NC",
                            HeInCode = "NC",
                            Inactive = false,
                            Name = "New Caledonia"
                        },
                        new
                        {
                            Id = new Guid("264432ff-ba3d-4402-ae05-d3cbbdf7eef4"),
                            Code = "NE",
                            HeInCode = "229",
                            Inactive = false,
                            Name = "Niger"
                        },
                        new
                        {
                            Id = new Guid("6d5a6761-432b-4bd2-9b04-5e01c421de23"),
                            Code = "NF",
                            HeInCode = "NF",
                            Inactive = false,
                            Name = "Norfolk Island"
                        },
                        new
                        {
                            Id = new Guid("9acb769e-d2de-479c-b66a-424ce710a036"),
                            Code = "NG",
                            HeInCode = "230",
                            Inactive = false,
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("2eb9de76-3d99-43a5-b17d-ba2f0e08c64a"),
                            Code = "NI",
                            HeInCode = "228",
                            Inactive = false,
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = new Guid("ab16a3ed-00cd-4445-8e7c-770b1965232e"),
                            Code = "NL",
                            HeInCode = "173",
                            Inactive = false,
                            Name = "Hà Lan"
                        },
                        new
                        {
                            Id = new Guid("8ff51ea0-476b-4dec-8736-70cc36ea1d2c"),
                            Code = "NO",
                            HeInCode = "225",
                            Inactive = false,
                            Name = "Na Uy"
                        },
                        new
                        {
                            Id = new Guid("2f4455d6-efee-4959-8dfd-6f7db81faadd"),
                            Code = "NP",
                            HeInCode = "226",
                            Inactive = false,
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = new Guid("1f0c0c80-dceb-47c4-9bfb-d9e2b29e8010"),
                            Code = "NR",
                            HeInCode = "224",
                            Inactive = false,
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = new Guid("50c044c3-6cd1-46ad-b10a-e879291806f2"),
                            Code = "NU",
                            HeInCode = "NU",
                            Inactive = false,
                            Name = "Niue"
                        },
                        new
                        {
                            Id = new Guid("1bb67a2c-65b1-4437-b7db-61bb5c5c945a"),
                            Code = "NZ",
                            HeInCode = "227",
                            Inactive = false,
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = new Guid("1137907c-6292-4973-8a6a-5a8a55216701"),
                            Code = "OM",
                            HeInCode = "233",
                            Inactive = false,
                            Name = "Oman"
                        },
                        new
                        {
                            Id = new Guid("561d896e-c3c5-4dfc-b13c-790aa25fbd5d"),
                            Code = "PA",
                            HeInCode = "236",
                            Inactive = false,
                            Name = "Panama"
                        },
                        new
                        {
                            Id = new Guid("5a68453d-81d4-4417-a579-33d6a1c27ea6"),
                            Code = "PE",
                            HeInCode = "239",
                            Inactive = false,
                            Name = "Peru"
                        },
                        new
                        {
                            Id = new Guid("58776bc3-ee4b-44ae-ac9e-a501437bde2f"),
                            Code = "PF",
                            HeInCode = "PF",
                            Inactive = false,
                            Name = "French Polynesia"
                        },
                        new
                        {
                            Id = new Guid("26d0e10a-43ea-4654-93be-00a21f60b760"),
                            Code = "PG",
                            HeInCode = "237",
                            Inactive = false,
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            Id = new Guid("7a384197-d55e-44b8-b389-a65f17e74e1f"),
                            Code = "PH",
                            HeInCode = "242",
                            Inactive = false,
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = new Guid("5bd03273-5b23-4181-892c-397126e8da56"),
                            Code = "PK",
                            HeInCode = "234",
                            Inactive = false,
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = new Guid("d1fef153-87bc-403a-9590-0ec4cc8d676e"),
                            Code = "PL",
                            HeInCode = "118",
                            Inactive = false,
                            Name = "Ba Lan"
                        },
                        new
                        {
                            Id = new Guid("788693d2-4ac9-4f85-94bf-13d021bc000d"),
                            Code = "PM",
                            HeInCode = "PM",
                            Inactive = false,
                            Name = "St. Pierre and Miquelon"
                        },
                        new
                        {
                            Id = new Guid("79bc1ba0-a0f6-4065-9783-9e01ade32cde"),
                            Code = "PN",
                            HeInCode = "PN",
                            Inactive = false,
                            Name = "Pitcairn"
                        },
                        new
                        {
                            Id = new Guid("0d9bf5f6-20bb-4b4f-8c3e-0b7205eabe19"),
                            Code = "PR",
                            HeInCode = "PR",
                            Inactive = false,
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = new Guid("0105cfd9-5265-4dcc-b2d8-790abecd5577"),
                            Code = "PS",
                            HeInCode = "PS",
                            Inactive = false,
                            Name = "Palestinian Authority"
                        },
                        new
                        {
                            Id = new Guid("4b12f61e-5980-415f-a62b-b296753fd70d"),
                            Code = "PT",
                            HeInCode = "129",
                            Inactive = false,
                            Name = "Bồ Đào Nha"
                        },
                        new
                        {
                            Id = new Guid("a3c5c224-a013-4e23-8655-641a0a76b38a"),
                            Code = "PW",
                            HeInCode = "235",
                            Inactive = false,
                            Name = "Palau"
                        },
                        new
                        {
                            Id = new Guid("af9c2425-679e-4459-8c68-2d357f4f93e5"),
                            Code = "PY",
                            HeInCode = "238",
                            Inactive = false,
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = new Guid("dd951a03-c803-4351-aac5-ed4ec9922bab"),
                            Code = "QA",
                            HeInCode = "243",
                            Inactive = false,
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = new Guid("6d2d2371-8785-4a7b-94ba-84c804b2b0a2"),
                            Code = "RE",
                            HeInCode = "RE",
                            Inactive = false,
                            Name = "Reunion"
                        },
                        new
                        {
                            Id = new Guid("de0d7be8-8a87-4358-b93e-e809ab17f238"),
                            Code = "RO",
                            HeInCode = "244",
                            Inactive = false,
                            Name = "Romania"
                        },
                        new
                        {
                            Id = new Guid("1c1e8f0d-fa36-4dd5-a349-51f8f8cf1e11"),
                            Code = "RU",
                            HeInCode = "231",
                            Inactive = false,
                            Name = "Nga"
                        },
                        new
                        {
                            Id = new Guid("f21a86da-a1de-4023-93c9-3a23d315a8cd"),
                            Code = "RW",
                            HeInCode = "245",
                            Inactive = false,
                            Name = "Rwanda"
                        },
                        new
                        {
                            Id = new Guid("33aeb885-ea5c-4343-8011-b1dccebdd65f"),
                            Code = "SA",
                            HeInCode = "110",
                            Inactive = false,
                            Name = "Ả Rập Saudi"
                        },
                        new
                        {
                            Id = new Guid("7e27cb42-41fb-4b20-b26b-3c1ea9b4ff5c"),
                            Code = "SB",
                            HeInCode = "260",
                            Inactive = false,
                            Name = "Solomon"
                        },
                        new
                        {
                            Id = new Guid("63c8621a-fc44-4abe-ba08-8d80520280cf"),
                            Code = "SC",
                            HeInCode = "255",
                            Inactive = false,
                            Name = "Seychelles"
                        },
                        new
                        {
                            Id = new Guid("a30f588b-166d-4118-9d33-b8294e15ad44"),
                            Code = "SD",
                            HeInCode = "263",
                            Inactive = false,
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = new Guid("0f42743d-f2ae-4d4d-9e9c-6dcd785204ff"),
                            Code = "SE",
                            HeInCode = "273",
                            Inactive = false,
                            Name = "Thụy Điển"
                        },
                        new
                        {
                            Id = new Guid("57c01cf1-7f20-4a6c-bec9-bcc9a3a039fe"),
                            Code = "SG",
                            HeInCode = "257",
                            Inactive = false,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("5300fbb8-1d3b-48c2-b251-c9daab165b94"),
                            Code = "SH",
                            HeInCode = "SH",
                            Inactive = false,
                            Name = "St. Helena"
                        },
                        new
                        {
                            Id = new Guid("92aea1da-5cf2-40fa-92a2-cce297949451"),
                            Code = "SI",
                            HeInCode = "259",
                            Inactive = false,
                            Name = "Slovenia"
                        },
                        new
                        {
                            Id = new Guid("99cfce62-6540-4525-97b8-9a2e62618e05"),
                            Code = "SJ",
                            HeInCode = "SJ",
                            Inactive = false,
                            Name = "Svalbard and Jan Mayen Islands"
                        },
                        new
                        {
                            Id = new Guid("b6169a90-920f-425d-a275-82601862a220"),
                            Code = "SK",
                            HeInCode = "258",
                            Inactive = false,
                            Name = "Slovakia"
                        },
                        new
                        {
                            Id = new Guid("45696681-b325-4d55-b4ea-56a920227907"),
                            Code = "SL",
                            HeInCode = "256",
                            Inactive = false,
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            Id = new Guid("4b7309a1-de33-4f43-a2ff-3f11e0e5869b"),
                            Code = "SM",
                            HeInCode = "250",
                            Inactive = false,
                            Name = "San Marino"
                        },
                        new
                        {
                            Id = new Guid("cba207c9-9ee4-4a20-876b-ecb1160d0845"),
                            Code = "SN",
                            HeInCode = "253",
                            Inactive = false,
                            Name = "Sénégal"
                        },
                        new
                        {
                            Id = new Guid("72d527d4-00df-4f9a-b0e1-e1fa84a4ba6d"),
                            Code = "SO",
                            HeInCode = "261",
                            Inactive = false,
                            Name = "Somalia"
                        },
                        new
                        {
                            Id = new Guid("3671801a-1c88-4dc6-9e75-d766644c2af9"),
                            Code = "SR",
                            HeInCode = "264",
                            Inactive = false,
                            Name = "Suriname"
                        },
                        new
                        {
                            Id = new Guid("3f3e1d5e-ca7b-45ef-9e1e-f3c471e8894f"),
                            Code = "ST",
                            HeInCode = "251",
                            Inactive = false,
                            Name = "São Tomé và Príncipe"
                        },
                        new
                        {
                            Id = new Guid("e5439053-279d-4094-852d-0c2edc6992ed"),
                            Code = "SV",
                            HeInCode = "157",
                            Inactive = false,
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = new Guid("44ff82d4-3356-4f71-9aa2-dc5f161537f0"),
                            Code = "SY",
                            HeInCode = "266",
                            Inactive = false,
                            Name = "Syria"
                        },
                        new
                        {
                            Id = new Guid("8562fd7f-49aa-46cf-bbc9-71f7460c6ba7"),
                            Code = "SZ",
                            HeInCode = "265",
                            Inactive = false,
                            Name = "Swaziland"
                        },
                        new
                        {
                            Id = new Guid("716a0688-0378-4941-af8f-c11dc4c45ac2"),
                            Code = "TC",
                            HeInCode = "TC",
                            Inactive = false,
                            Name = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = new Guid("36299397-b100-420b-bd1b-3f18eda310fa"),
                            Code = "TD",
                            HeInCode = "270",
                            Inactive = false,
                            Name = "Tchad"
                        },
                        new
                        {
                            Id = new Guid("2eead3fb-8c57-4699-a48d-b9eb2a781d23"),
                            Code = "TF",
                            HeInCode = "TF",
                            Inactive = false,
                            Name = "French Southern Territories"
                        },
                        new
                        {
                            Id = new Guid("ba947c48-36fb-420b-b2d9-663fe308b18c"),
                            Code = "TG",
                            HeInCode = "275",
                            Inactive = false,
                            Name = "Togo"
                        },
                        new
                        {
                            Id = new Guid("f07d3dde-aea1-4f0a-ba9d-310cda4fa6e9"),
                            Code = "TH",
                            HeInCode = "271",
                            Inactive = false,
                            Name = "Thái Lan"
                        },
                        new
                        {
                            Id = new Guid("53b7d739-4b49-4a35-9d04-93520d79d105"),
                            Code = "TJ",
                            HeInCode = "267",
                            Inactive = false,
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = new Guid("5351587c-9713-44c9-9088-9626d01300c8"),
                            Code = "TK",
                            HeInCode = "TK",
                            Inactive = false,
                            Name = "Tokelau"
                        },
                        new
                        {
                            Id = new Guid("6b8836aa-2476-4d82-98f1-0b7f56e66f7a"),
                            Code = "TL",
                            HeInCode = "TL",
                            Inactive = false,
                            Name = "Timor Leste"
                        },
                        new
                        {
                            Id = new Guid("7af80a81-41e5-47de-abd3-7ce25f9c39b4"),
                            Code = "TM",
                            HeInCode = "282",
                            Inactive = false,
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            Id = new Guid("1cb83a16-11a1-438b-8fd9-22e661c5904a"),
                            Code = "TN",
                            HeInCode = "281",
                            Inactive = false,
                            Name = "Tunisia"
                        },
                        new
                        {
                            Id = new Guid("05f8a24e-3764-41af-b79b-3e05da6964ad"),
                            Code = "TO",
                            HeInCode = "276",
                            Inactive = false,
                            Name = "Tonga"
                        },
                        new
                        {
                            Id = new Guid("ee02aa87-f8dc-44ac-9ac9-830120f05656"),
                            Code = "TR",
                            HeInCode = "272",
                            Inactive = false,
                            Name = "Thổ Nhĩ Kỳ"
                        },
                        new
                        {
                            Id = new Guid("36ddc306-adf0-4897-a200-6377ff0d9042"),
                            Code = "TT",
                            HeInCode = "278",
                            Inactive = false,
                            Name = "Trinidad và Tobago"
                        },
                        new
                        {
                            Id = new Guid("f79baaf7-6191-4ba9-b38a-2f1b50d05598"),
                            Code = "TV",
                            HeInCode = "283",
                            Inactive = false,
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Id = new Guid("bf1bf333-4604-4974-838f-886100c006f3"),
                            Code = "TW",
                            HeInCode = "TW",
                            Inactive = false,
                            Name = "Đài Loan"
                        },
                        new
                        {
                            Id = new Guid("ff78779a-45cd-4076-8c61-442a9a3873f2"),
                            Code = "TZ",
                            HeInCode = "268",
                            Inactive = false,
                            Name = "Tanzania"
                        },
                        new
                        {
                            Id = new Guid("af24512b-01ae-4420-96cb-62051ede96cc"),
                            Code = "UA",
                            HeInCode = "286",
                            Inactive = false,
                            Name = "Ukraina"
                        },
                        new
                        {
                            Id = new Guid("ad4ef5f1-e823-4ed4-9ad5-cec4a2cae6af"),
                            Code = "UG",
                            HeInCode = "285",
                            Inactive = false,
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = new Guid("05600686-62bc-4be9-b009-58ae6fac5dc2"),
                            Code = "UM",
                            HeInCode = "UM",
                            Inactive = false,
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = new Guid("97bc234b-7d4c-4870-801b-74f1998741be"),
                            Code = "US",
                            HeInCode = "175",
                            Inactive = false,
                            Name = "Hoa Kỳ"
                        },
                        new
                        {
                            Id = new Guid("edb5a6e1-b084-4e46-87ab-22d38da9cf0a"),
                            Code = "UY",
                            HeInCode = "287",
                            Inactive = false,
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = new Guid("9ee7b166-4c6f-4136-8928-c6246c3e76d5"),
                            Code = "UZ",
                            HeInCode = "288",
                            Inactive = false,
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            Id = new Guid("1760cdb2-5d9e-4a4d-a422-9d2d54333b72"),
                            Code = "VA",
                            HeInCode = "290",
                            Inactive = false,
                            Name = "Thành Vatican"
                        },
                        new
                        {
                            Id = new Guid("a1f120ed-4785-486e-b796-dd8cd569a415"),
                            Code = "VC",
                            HeInCode = "248",
                            Inactive = false,
                            Name = "Saint Vincent và Grenadines"
                        },
                        new
                        {
                            Id = new Guid("a7a696de-3fd8-48c2-b87a-6464b222af87"),
                            Code = "VE",
                            HeInCode = "291",
                            Inactive = false,
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = new Guid("539247ef-f9a9-4893-b250-2aa204a87640"),
                            Code = "VG",
                            HeInCode = "VG",
                            Inactive = false,
                            Name = "Virgin Islands (British)"
                        },
                        new
                        {
                            Id = new Guid("fb67b422-6903-494e-945d-fa09f031b4f1"),
                            Code = "VI",
                            HeInCode = "VI",
                            Inactive = false,
                            Name = "Virgin Islands (U.S.)"
                        },
                        new
                        {
                            Id = new Guid("0103bc86-7105-49c2-905a-cb83d3ee87c2"),
                            Code = "VN",
                            HeInCode = "000",
                            Inactive = false,
                            Name = "Việt Nam"
                        },
                        new
                        {
                            Id = new Guid("3d9d9ca5-3356-48b3-b518-eb806a6128ee"),
                            Code = "VU",
                            HeInCode = "289",
                            Inactive = false,
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Id = new Guid("ffd3fabd-a5f1-4442-837b-d53b5d89272e"),
                            Code = "WF",
                            HeInCode = "WF",
                            Inactive = false,
                            Name = "Wallis and Futuna Islands"
                        },
                        new
                        {
                            Id = new Guid("74c266fd-7287-4525-aca3-6bb66ddcf61f"),
                            Code = "WS",
                            HeInCode = "249",
                            Inactive = false,
                            Name = "Samoa"
                        },
                        new
                        {
                            Id = new Guid("a695b824-cfc2-40a3-b5a1-35243a6e2116"),
                            Code = "YE",
                            HeInCode = "293",
                            Inactive = false,
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = new Guid("c7f500b0-be15-4ab8-ae5c-1db430d19b8c"),
                            Code = "YT",
                            HeInCode = "YT",
                            Inactive = false,
                            Name = "Mayotte"
                        },
                        new
                        {
                            Id = new Guid("a1ba5be8-fef9-470a-a5f7-efcf7fc900a4"),
                            Code = "ME",
                            HeInCode = "218",
                            Inactive = false,
                            Name = "Montenegro"
                        },
                        new
                        {
                            Id = new Guid("16bfb332-7ffe-4d31-a2a2-05e7cc250969"),
                            Code = "Z1",
                            HeInCode = "Z1",
                            Inactive = false,
                            Name = "Sovereign Military Order of Malta (SMOM)"
                        },
                        new
                        {
                            Id = new Guid("e43c3f5c-e8d7-430a-9869-e61337bd4188"),
                            Code = "Z2",
                            HeInCode = "Z2",
                            Inactive = false,
                            Name = "British Southern and Antarctic Territories"
                        },
                        new
                        {
                            Id = new Guid("5d60e969-8387-42e4-b866-31dfb209f433"),
                            Code = "Z3",
                            HeInCode = "Z3",
                            Inactive = false,
                            Name = "England"
                        },
                        new
                        {
                            Id = new Guid("20aa6e3b-0838-45fc-9769-161b291e5e24"),
                            Code = "Z4",
                            HeInCode = "Z4",
                            Inactive = false,
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = new Guid("d0357290-582a-47cd-984c-8815d38454be"),
                            Code = "Z5",
                            HeInCode = "Z5",
                            Inactive = false,
                            Name = "Northern Ireland"
                        },
                        new
                        {
                            Id = new Guid("2e24284d-fe7b-477b-a3e9-23505ccbe379"),
                            Code = "Z6",
                            HeInCode = "Z6",
                            Inactive = false,
                            Name = "Great Britain (See United Kingdom)"
                        },
                        new
                        {
                            Id = new Guid("c8766416-ed13-4631-a9c4-e89e782055c9"),
                            Code = "Z7",
                            HeInCode = "Z7",
                            Inactive = false,
                            Name = "Wales"
                        },
                        new
                        {
                            Id = new Guid("59e93599-98e9-44de-b9d1-bbbf17c599bf"),
                            Code = "ZA",
                            HeInCode = "223",
                            Inactive = false,
                            Name = "Nam Phi"
                        },
                        new
                        {
                            Id = new Guid("e1fc9395-73b5-4fd6-8c31-37fef3a3e866"),
                            Code = "ZM",
                            HeInCode = "294",
                            Inactive = false,
                            Name = "Zambia"
                        },
                        new
                        {
                            Id = new Guid("90ef0553-8520-4d57-ae3b-112ebf28b313"),
                            Code = "ZW",
                            HeInCode = "295",
                            Inactive = false,
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            Id = new Guid("39351753-1af5-4797-89e2-b97589db8d2e"),
                            Code = "AZ",
                            HeInCode = "114",
                            Inactive = false,
                            Name = "Cộng hòa Azerbaijan"
                        },
                        new
                        {
                            Id = new Guid("dd79ead4-6e12-4cb8-aff5-8f00d8bf9e99"),
                            Code = "SD",
                            HeInCode = "222",
                            Inactive = false,
                            Name = "Nam Sudan"
                        },
                        new
                        {
                            Id = new Guid("a8b38e56-d3ea-435f-907a-615ed7ced805"),
                            Code = "AF",
                            HeInCode = "101",
                            Inactive = false,
                            Name = "Afghanistan"
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MohCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentTypeId");

                    b.ToTable("SDepartments", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SDepartmentTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "LS",
                            Inactive = false,
                            Name = "Khoa lâm sàng",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "CLS",
                            Inactive = false,
                            Name = "Khoa cận lâm sàng",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            Code = "DUOC",
                            Inactive = false,
                            Name = "Khoa dược",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            Code = "KHTH",
                            Inactive = false,
                            Name = "Kế hoạch tổng hợp",
                            SortOrder = 4
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDistrict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("SDistricts", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SEthnic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("SEthnics", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SExecutionRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SExecutionRooms", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SGender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SGenders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("97ac7fd8-edfa-4243-97fc-98468f492df1"),
                            Code = "KXD",
                            CreatedDate = new DateTime(2023, 8, 8, 23, 9, 23, 785, DateTimeKind.Local).AddTicks(4420),
                            Inactive = false,
                            Name = "Chưa xác định",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = new Guid("fc153433-bf89-4e95-8523-df3d8cec8676"),
                            Code = "NAM",
                            CreatedDate = new DateTime(2023, 8, 8, 23, 9, 23, 785, DateTimeKind.Local).AddTicks(4440),
                            Inactive = false,
                            Name = "Nam",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = new Guid("e9497984-d355-41af-b917-091500956be9"),
                            Code = "NU",
                            CreatedDate = new DateTime(2023, 8, 8, 23, 9, 23, 785, DateTimeKind.Local).AddTicks(4442),
                            Inactive = false,
                            Name = "Nữ",
                            SortOrder = 2
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SHospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Grade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Line")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MohCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("SHospitals", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SIcd", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChapterCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChapterName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ChapterNameEnglish")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("MainGroupCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MainGroupName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MainGroupNameEnglish")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MohReportCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("NameCommon")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("NameEnglish")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SubGroup1Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubGroup1Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SubGroup1NameEnglish")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SubGroup2Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubGroup2Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SubGroup2NameEnglish")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("TypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("TypeNameEnglish")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("SIcds", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SPatientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SPatientTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BHYT",
                            CreatedDate = new DateTime(2023, 8, 8, 23, 9, 23, 785, DateTimeKind.Local).AddTicks(5485),
                            Inactive = false,
                            Name = "Bảo hiểm y tế",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "VP",
                            CreatedDate = new DateTime(2023, 8, 8, 23, 9, 23, 785, DateTimeKind.Local).AddTicks(5489),
                            Inactive = false,
                            Name = "Viện phí",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "DV",
                            CreatedDate = new DateTime(2023, 8, 8, 23, 9, 23, 785, DateTimeKind.Local).AddTicks(5491),
                            Inactive = false,
                            Name = "Dịch vụ",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SProvince", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("SProvinces", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MohCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("SRooms", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SRoomTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TD",
                            Inactive = false,
                            Name = "Tiếp đón",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "HC",
                            Inactive = false,
                            Name = "Hành chính",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            Code = "KHAM",
                            Inactive = false,
                            Name = "Khám bệnh",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            Code = "NT",
                            Inactive = false,
                            Name = "Nội trú",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            Code = "NgT",
                            Inactive = false,
                            Name = "Ngoại trú",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 6,
                            Code = "XN",
                            Inactive = false,
                            Name = "Xét nghiệm",
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 7,
                            Code = "CDHA",
                            Inactive = false,
                            Name = "Chẩn đoán hình ảnh",
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 8,
                            Code = "KHO-TONG",
                            Inactive = false,
                            Name = "Kho tổng",
                            SortOrder = 8
                        },
                        new
                        {
                            Id = 9,
                            Code = "KHO-NgT",
                            Inactive = false,
                            Name = "Kho thuốc ngoại trú",
                            SortOrder = 9
                        },
                        new
                        {
                            Id = 10,
                            Code = "KHO-NT",
                            Inactive = false,
                            Name = "Kho thuốc nội trú",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 11,
                            Code = "TT-TH",
                            Inactive = false,
                            Name = "Tủ trực thuốc",
                            SortOrder = 11
                        },
                        new
                        {
                            Id = 12,
                            Code = "KHO-VTYT",
                            Inactive = false,
                            Name = "Kho vật tự y tế",
                            SortOrder = 12
                        },
                        new
                        {
                            Id = 13,
                            Code = "KHO-MAU",
                            Inactive = false,
                            Name = "Kho máu",
                            SortOrder = 13
                        },
                        new
                        {
                            Id = 14,
                            Code = "TT-VT",
                            Inactive = false,
                            Name = "Tủ trực VTYT",
                            SortOrder = 14
                        },
                        new
                        {
                            Id = 15,
                            Code = "QLT",
                            Inactive = false,
                            Name = "Quản lý thuốc",
                            SortOrder = 15
                        },
                        new
                        {
                            Id = 16,
                            Code = "QLVT",
                            Inactive = false,
                            Name = "Quản lý vật tư",
                            SortOrder = 16
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SSupplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SSuppliers", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SUnits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c587599c-a6a6-454f-8e30-2a92dac6f588"),
                            Code = "VIEN",
                            Inactive = false,
                            Name = "Viên",
                            SortOrder = 1,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("6cc9258a-5f48-4c22-8cd6-61c0795f5405"),
                            Code = "LAN",
                            Inactive = false,
                            Name = "Lần",
                            SortOrder = 2,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("ae0ece26-bb4c-4b23-95cb-1a5d66114634"),
                            Code = "LO",
                            Inactive = false,
                            Name = "Lọ",
                            SortOrder = 3,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("da514a31-4dfc-4445-99bd-4ae29359ad48"),
                            Code = "TUYT",
                            Inactive = false,
                            Name = "Tuýt",
                            SortOrder = 4,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("44ab6ffc-f1a9-47d0-90ab-9f09d767c286"),
                            Code = "ONG",
                            Inactive = false,
                            Name = "Ống",
                            SortOrder = 5,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("0762aebf-cbb8-4102-b923-a30df490f75d"),
                            Code = "6",
                            Inactive = false,
                            Name = "Hộp",
                            SortOrder = 6,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("7a0fed4a-e62a-4e9f-8e92-7332127ca248"),
                            Code = "TUB",
                            Inactive = false,
                            Name = "Tub",
                            SortOrder = 7,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("9ff4f404-68bd-4780-99bc-1033227cbe3d"),
                            Code = "GOI",
                            Inactive = false,
                            Name = "Gói",
                            SortOrder = 8,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("2198d1c0-57fa-453f-b605-9cef55929067"),
                            Code = "CUON",
                            Inactive = false,
                            Name = "Cuộn",
                            SortOrder = 9,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("bf42cbf7-b5ac-4503-b73d-d91f4051fa8f"),
                            Code = "ML",
                            Inactive = false,
                            Name = "ml",
                            SortOrder = 10,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("9e12370e-b3ce-4862-8e7d-83d8f7ec56d1"),
                            Code = "LIT",
                            Inactive = false,
                            Name = "Lít",
                            SortOrder = 11,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("3be8bc27-3940-451c-87f5-c062df716872"),
                            Code = "GAM",
                            Inactive = false,
                            Name = "Gam",
                            SortOrder = 12,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("cc8713c1-536a-4835-bd7e-187603566f95"),
                            Code = "KG",
                            Inactive = false,
                            Name = "Kg",
                            SortOrder = 13,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("49793db4-c0ce-43c1-b439-eacd554fa06e"),
                            Code = "MET",
                            Inactive = false,
                            Name = "Met",
                            SortOrder = 14,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("a7e37e54-47b8-4716-b493-b657d4981e35"),
                            Code = "MINI",
                            Inactive = false,
                            Name = "Minimet",
                            SortOrder = 15,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("fd96bad9-b254-4b37-8eb9-ada68fe7dada"),
                            Code = "CHAI",
                            Inactive = false,
                            Name = "Chai",
                            SortOrder = 16,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("8d7a7b33-f2ed-4b4b-a869-3ad32fd9d192"),
                            Code = "TUI",
                            Inactive = false,
                            Name = "Túi",
                            SortOrder = 17,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("e04b1f07-6f05-403e-ac09-b999cac0df3e"),
                            Code = "CAI",
                            Inactive = false,
                            Name = "Cái",
                            SortOrder = 18,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("e46826b4-76f9-4b32-84b3-b9730e732839"),
                            Code = "CHIEC",
                            Inactive = false,
                            Name = "Chiếc",
                            SortOrder = 19,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("46ea45ff-ba5e-4f6f-bbc6-ebe65446efe8"),
                            Code = "GAM",
                            Inactive = false,
                            Name = "Gam",
                            SortOrder = 20,
                            UnitType = 0
                        },
                        new
                        {
                            Id = new Guid("fc7acf3a-2c10-4200-9448-c3180c0a4400"),
                            Code = "MIENG",
                            Inactive = false,
                            Name = "Miếng",
                            SortOrder = 21,
                            UnitType = 0
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SWard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("SWards", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("SPermissions", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("SRoles", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SRolePermissionBranch", b =>
                {
                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("BranchId");

                    b.HasIndex("PermissionId");

                    b.ToTable("SRolePermissionBranchs", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Jti")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("TokenValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("STokens", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .HasMaxLength(1020)
                        .HasColumnType("nvarchar(1020)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UseType")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("WardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3382be1c-2836-4246-99db-c4e1c781e868"),
                            Email = "administrator@gmail.com",
                            FirstName = "Admin",
                            LastName = "Administrator",
                            Password = "79956B61E1B250869A6716CE37EFD6E6",
                            Status = 1,
                            UseType = 0,
                            UserName = "Administrator"
                        });
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SUserRole", b =>
                {
                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("SUserRoles", (string)null);
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Patients.SPatient", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SGender", "Gender")
                        .WithMany("SPatients")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Pharmaceuticals.ImpMests.DImpMest", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SUser", "ApproverUser")
                        .WithMany()
                        .HasForeignKey("ApproverUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoom", "ExStock")
                        .WithMany()
                        .HasForeignKey("ExStockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Business.Pharmaceuticals.DImpExMestType", "DImExMestType")
                        .WithMany()
                        .HasForeignKey("ImExMestTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoom", "ImStock")
                        .WithMany()
                        .HasForeignKey("ImStockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Business.Patients.SPatient", "SPatient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SUser", "ReceiverUser")
                        .WithMany()
                        .HasForeignKey("ReceiverUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartment", "ReqDepartment")
                        .WithMany()
                        .HasForeignKey("ReqDepartmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoom", "ReqRoom")
                        .WithMany()
                        .HasForeignKey("ReqRoomId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SUser", "StockReceiptUser")
                        .WithMany()
                        .HasForeignKey("StockReceiptUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SSupplier", "SSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Business.Patients.STreatment", "STreatment")
                        .WithMany()
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ApproverUser");

                    b.Navigation("DImExMestType");

                    b.Navigation("ExStock");

                    b.Navigation("ImStock");

                    b.Navigation("ReceiverUser");

                    b.Navigation("ReqDepartment");

                    b.Navigation("ReqRoom");

                    b.Navigation("SPatient");

                    b.Navigation("SSupplier");

                    b.Navigation("STreatment");

                    b.Navigation("StockReceiptUser");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Business.Pharmaceuticals.ImpMests.DImpMestMedicine", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Business.Pharmaceuticals.ImpMests.DImpMest", "DImMest")
                        .WithMany()
                        .HasForeignKey("ImpMestId");

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SMedicine", "SMedicine")
                        .WithMany()
                        .HasForeignKey("MedicineId");

                    b.Navigation("DImMest");

                    b.Navigation("SMedicine");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Medicines.SMedicinePricePolicy", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SMedicine", "SMedicine")
                        .WithMany()
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SPatientType", "SPatientType")
                        .WithMany()
                        .HasForeignKey("PatientTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SMedicine");

                    b.Navigation("SPatientType");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMaterial", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SMaterialType", "SMaterialType")
                        .WithMany("SMaterials")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SUnit", "SUnit")
                        .WithMany("SMaterials")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SMaterialType");

                    b.Navigation("SUnit");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMaterialType", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SUnit", "SUnit")
                        .WithMany("SMaterialTypes")
                        .HasForeignKey("ServiceUnitId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SUnit");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicine", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SCountry", "SCountry")
                        .WithMany("SMedicines")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SMedicineLine", "SMedicineLine")
                        .WithMany("SMedicines")
                        .HasForeignKey("MedicineLineId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SMedicineType", "SMedicineType")
                        .WithMany("SMedicines")
                        .HasForeignKey("MedicineTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SUnit", "SUnit")
                        .WithMany("SMedicines")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SCountry");

                    b.Navigation("SMedicineLine");

                    b.Navigation("SMedicineType");

                    b.Navigation("SUnit");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicineType", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SCountry", "SCountry")
                        .WithMany("SMedicineTypes")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SMedicineGroup", "SMedicineGroup")
                        .WithMany("SMedicineTypes")
                        .HasForeignKey("MedicineGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SMedicineLine", "SMedicineLine")
                        .WithMany("SMedicineTypes")
                        .HasForeignKey("MedicineLineId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SUnit", "SUnit")
                        .WithMany("SMedicineTypes")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SCountry");

                    b.Navigation("SMedicineGroup");

                    b.Navigation("SMedicineLine");

                    b.Navigation("SUnit");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SService", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.Services.SServiceGroupHeIn", "SServiceGroupHeIn")
                        .WithMany("SServices")
                        .HasForeignKey("ServiceGroupHeInId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SServiceGroup", "SServiceGroup")
                        .WithMany("SServices")
                        .HasForeignKey("ServiceGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.Services.SSurgicalProcedureType", "SSurgicalProcedureType")
                        .WithMany("SServices")
                        .HasForeignKey("SurgicalProcedureTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SUnit", "SUnit")
                        .WithMany("SServices")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SServiceGroup");

                    b.Navigation("SServiceGroupHeIn");

                    b.Navigation("SSurgicalProcedureType");

                    b.Navigation("SUnit");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SServicePricePolicy", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SPatientType", "SPatientType")
                        .WithMany()
                        .HasForeignKey("PatientTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SService", "SService")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SPatientType");

                    b.Navigation("SService");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SServiceResultIndice", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SService", "SService")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SService");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartment", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SBranch", "SBranch")
                        .WithMany("Departments")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartmentType", "SDepartmentType")
                        .WithMany("SDepartments")
                        .HasForeignKey("DepartmentTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SBranch");

                    b.Navigation("SDepartmentType");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDistrict", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SProvince", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Province");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SExecutionRoom", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoom", "SRoom")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Categories.SService", "SService")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SRoom");

                    b.Navigation("SService");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SProvince", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SCountry", "Country")
                        .WithMany("SProvinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoom", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartment", "SDepartment")
                        .WithMany("SRooms")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoomType", "SRoomType")
                        .WithMany("SRooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SDepartment");

                    b.Navigation("SRoomType");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SWard", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SDistrict", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("District");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SRolePermissionBranch", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Dictionaries.SBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SPermission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SRole", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SToken", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SUser", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SUserRole", b =>
                {
                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HIS.EntityFrameworkCore.Entities.Systems.SUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMaterialType", b =>
                {
                    b.Navigation("SMaterials");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicineGroup", b =>
                {
                    b.Navigation("SMedicineTypes");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicineLine", b =>
                {
                    b.Navigation("SMedicineTypes");

                    b.Navigation("SMedicines");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SMedicineType", b =>
                {
                    b.Navigation("SMedicines");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.SServiceGroup", b =>
                {
                    b.Navigation("SServices");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SServiceGroupHeIn", b =>
                {
                    b.Navigation("SServices");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Categories.Services.SSurgicalProcedureType", b =>
                {
                    b.Navigation("SServices");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SBranch", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SCountry", b =>
                {
                    b.Navigation("SMedicineTypes");

                    b.Navigation("SMedicines");

                    b.Navigation("SProvinces");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartment", b =>
                {
                    b.Navigation("SRooms");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDepartmentType", b =>
                {
                    b.Navigation("SDepartments");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SDistrict", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SGender", b =>
                {
                    b.Navigation("SPatients");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SProvince", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SRoomType", b =>
                {
                    b.Navigation("SRooms");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Dictionaries.SUnit", b =>
                {
                    b.Navigation("SMaterialTypes");

                    b.Navigation("SMaterials");

                    b.Navigation("SMedicineTypes");

                    b.Navigation("SMedicines");

                    b.Navigation("SServices");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SPermission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SRole", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("HIS.EntityFrameworkCore.Entities.Systems.SUser", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
